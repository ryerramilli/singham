<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.geekolator.singham</groupId>
	<artifactId>singham-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>A REST web service to query the singham graph datastore</description>
	<inceptionYear>2016</inceptionYear>
	<licenses>
		<license>
			<name>My License</name>
			<url>http://....</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.11.6</scala.version>
		<scala.compat.version>2.11</scala.compat.version>
		<aws.java.sdk.version>[1.10.5.1, 2.0.0)</aws.java.sdk.version>
		<beanstalk.versionLabel>${project.version}</beanstalk.versionLabel>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.typesafe.scala-logging</groupId>
			<artifactId>scala-logging_2.11</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.thinkaurelius.titan</groupId>
			<artifactId>titan-cassandra</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.thinkaurelius.titan</groupId>
			<artifactId>titan-core</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>com.michaelpollmeier</groupId>
			<artifactId>gremlin-scala_2.11</artifactId>
			<version>3.1.0-incubating.1</version>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-core_${scala.compat.version}</artifactId>
			<version>2.4.16</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.specs2</groupId>
			<artifactId>specs2-junit_${scala.compat.version}</artifactId>
			<version>2.4.16</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<version>2.2.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-routing-shapeless2_2.11</artifactId>
			<version>1.3.3</version>
		</dependency>

		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-servlet_2.11</artifactId>
			<version>1.3.3</version>
		</dependency>

		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_2.11</artifactId>
			<version>2.4.1</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-json_2.11</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-httpx_2.11</artifactId>
			<version>1.3.3</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.2</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.geekolator.singham</groupId>
			<artifactId>Singham-EKG</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-dynamodb</artifactId>
			<version>${aws.java.sdk.version}</version>
		</dependency>

		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>dynamodb-titan100-storage-backend</artifactId>
			<version>1.0.0</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>DynamoDBLocal</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webXml>${project.basedir}/src/main/webapp/web.xml</webXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.3.v20150827</version>
				<configuration>
					<httpConnector>
						<port>${service.port}</port>
					</httpConnector>
					<webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
				</configuration>
			</plugin>

			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<args>
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<configuration>
					<regionName>us-west-2</regionName>
					<s3Bucket>singham-service-0.0.1-snapshot</s3Bucket>

					<cnamePrefix>${project.name}-${beanstalk.environmentName}</cnamePrefix>
					<solutionStack>64bit Amazon Linux 2015.09 v2.0.7 running Tomcat 8 Java 8</solutionStack>

					<optionSettings>

						<optionSetting>
							<namespace>aws:autoscaling:launchconfiguration</namespace>
							<optionName>IamInstanceProfile</optionName>
							<value>aws-elasticbeanstalk-ec2-role</value>
						</optionSetting>

						<optionSetting>
							<namespace>aws:autoscaling:launchconfiguration</namespace>
							<optionName>InstanceType</optionName>
							<value>t1.micro</value>
						</optionSetting>

						<optionSetting>
							<namespace>aws:elasticbeanstalk:environment</namespace>
							<optionName>ServiceRole</optionName>
							<value>aws-elasticbeanstalk-service-role</value>
						</optionSetting>
						
						<optionSetting>
							<namespace>aws:elasticbeanstalk:application:environment</namespace>
							<optionName>singham.environment</optionName>
							<value>${singham.environment}</value>
						</optionSetting>

					</optionSettings>
				</configuration>

			</plugin>
		</plugins>
	</build>
	<packaging>war</packaging>
</project>
